// Creating Variables
$primary-color: #f0f1e8; //#3f3f40; // Beluga
$secondary-color: #f54d27;
$highlight-color: #ecece2;
$text-color: #403f3c;
$show-home-image: false;
$home-image: url('../img/nameOFImageFile.png'); // The ../ means to look outside the css file(origin)
$branding-smImage: url('../img/portrait_small.jpg');
$branding-image: url('../img/portrait.jpg');
$background-opacity: 0.9;

// Creating a Function
@mixin easeOut {
  transition: all 0.7s ease-out; // Have the color fade in and out.
}

@mixin background {
  @if $show-home-image {
    &#bg-img {
      background: $home-image;
      background-attachment: fixed;
      background-size: cover;

      &:after {
        // A pseudo element :after, runs code after bg-img.
        content: '';
        position: absolute; // So the image covers the whole body.
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
      }
    }
  }
}

// Set Text Color(using a @function because I need it to return a value.
@function set-text-color($color) {
  @if (lightness($color) < 40) {
    @return #40343c;
  } @else {
    @return #fcfcfa;
  }
}

// Media Query Mixins
@mixin mediaSm {
  // For screens 500px wide or less.
  @media screen and (max-width: 500px) {
    @content;
  }
}
// For screens 768px wide or less.
@mixin mediaMd {
  @media screen and (max-width: 768px) {
    @content;
  }
}
// For screens in between 769px to 1170px wide.
@mixin mediaLg {
  @media screen and (min-width: 769px) and (max-width: 1170px) {
    @content;
  }
}
// For screens from 1171px wide and above.
@mixin mediaXl {
  @media screen and (min-width: 1171px) {
    @content;
  }
}
