/*Top Right Mobile Menu Button*/
.menu-btn {
  position: absolute;
  z-index: 3;
  right: 35px;
  top: 35px;
  cursor: pointer;
  visibility: hidden;
  @include easeOut;

  .btn-line {
    width: 28px;
    height: 3px;
    margin: 0 0 5px 0;
    background: $highlight-color;
    @include easeOut;
  }

  /*Rotate Into X With Menu Lines*/
  &.close {
    transform: rotate(180deg); // Rotates together the button line 180 degrees.

    .btn-line {
      // Line 1 - Rotate
      &:nth-child(1) {
        transform: rotate(45deg) translate(5px, 5px); // Takes a while but play wiht the px to get the look I want.
      }
      // Line 2 - Hide
      &:nth-child(2) {
        opacity: 0;
      }
      // Line 3 - Rotate
      &:nth-child(3) {
        transform: rotate(-45deg) translate(7px, -6px);
      }
    }
  }
}

/*Bottom Fixed Menu*/
.menu {
  grid-column: 3/4;
  grid-row: 6/7;
  align-self: bottom;
  justify-self: center;
  opacity: $background-opacity;
  bottom: 0;

  &-branding,
  &-nav {
    overflow: hidden;
  }

  &-nav {
    font-size: 30px;
    margin: 0;
    padding: 0;
    list-style-type: none;
    @include easeOut;
  }

  .nav-item {
    float: left;

    &.current > a {
      color: $highlight-color;
    }
  }

  .nav-link {
    display: inline-block;
    position: relative;
    font-size: 15px;
    text-transform: uppercase;
    padding: 1rem;
    font-weight: 300;
    color: set-text-color($text-color);
    text-decoration: none;
    @include easeOut;

    &:hover {
      color: $highlight-color;
    }
  }
}

/*Delay each nav item mobile slide by 0.1s*/
/*Similar to for(let i = 0; i < 4; i++) in js for example.*/
/*Since it takes a variable needed to wrap $x in curly brackets, kinda of like a template literal in ES6.*/
@for $x from 1 through 4 {
  .nav-item:nth-child(#{$x}) {
    transition-delay: $x * 0.1s;
  }
}
